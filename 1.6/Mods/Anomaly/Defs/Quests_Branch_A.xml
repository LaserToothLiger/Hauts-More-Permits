<?xml version="1.0" encoding="utf-8" ?>
<Defs>
  
  <!--occult: barker-->
  <QuestScriptDef>
    <defName>HVMP_OccultBarker</defName>
	<isRootSpecial>true</isRootSpecial>
    <rootSelectionWeight>0</rootSelectionWeight>
    <rootMinPoints>350</rootMinPoints>
    <defaultChallengeRating>1</defaultChallengeRating>
    <expireDaysRange>4~8</expireDaysRange>
	<everAcceptableInSpace>true</everAcceptableInSpace>
    <questNameRules>
      <rulesStrings>
        <li>questName->the [cursed] [artifact]</li>
        <li>questName->[burying] a [artifact]</li>
		
        <li>cursed->Cursed</li>
        <li>cursed->Portentous</li>
        <li>cursed->Malevolent</li>
        <li>cursed->Malicious</li>
        <li>cursed->Dread</li>
        <li>cursed->Deathly</li>
        <li>cursed->Insidious</li>
        <li>cursed->Profane</li>
        <li>cursed->Forsaken</li>
        <li>cursed->Damned</li>
        <li>cursed->Jinxed</li>
        <li>cursed->Woeful</li>
        <li>cursed->Grave</li>
        <li>cursed->Blasphemous</li>
        <li>cursed->Dark</li>
        <li>cursed->Thrumming</li>
        <li>cursed->Chittering</li>
        <li>cursed->Rasping</li>
        <li>cursed->Tenebrous</li>
        <li>cursed->Shrouded</li>
        <li>cursed->Veiled</li>
		
        <li>artifact->Artifact</li>
        <li>artifact->Icon</li>
        <li>artifact->Effigy</li>
        <li>artifact->Form</li>
        <li>artifact->Object</li>
        <li>artifact->Entity</li>
        <li>artifact->Curio</li>
        <li>artifact->Vestige</li>
        <li>artifact->Item</li>
        <li>artifact->Idol</li>
        <li>artifact->Manifestation</li>
		
        <li>burying->Burying</li>
        <li>burying->Keeping</li>
        <li>burying->Locking Away</li>
        <li>burying->Sealing</li>
        <li>burying->Suppressing</li>
        <li>burying->Safekeeping</li>
        <li>burying->Safeguarding</li>
        <li>burying->Holding</li>
        <li>burying->Quelling</li>
        <li>burying->Stifling</li>
        <li>burying->Inhibiting</li>
        <li>burying->Checking</li>
        <li>burying->Controlling</li>
        <li>burying->Sequestering</li>
		
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->The Occult Branch tracks down objects with potentially anomalous origins and properties. They have found [mutator_TT_info] in the possession of other, less trustworthy parties on your world, and would like to transfer ownership of it to you for safeguarding.\n[mutatorSuffix]</li>
		<li>mutatorSuffix->[mutator_LGTH_info][mutator_RR_info]</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="HautsPermits_Occult.QuestNode_OccultIntermediary">
      <nodes>
		<li Class="QuestNode_GetMap">
		  <canBeSpace>true</canBeSpace>
		</li>
        <li Class="QuestNode_GetFactionOf">
          <thing>$asker</thing>
          <storeAs>faction</storeAs>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
        </li>
		<li Class="QuestNode_Delay">
			<delayTicks>$120</delayTicks>
			<node Class="QuestNode_Sequence">
			  <nodes>
				  <li Class="QuestNode_Set">
					<name>sendStandardLetter</name>
					<value>true</value>
				  </li>
				  <li Class="HautsPermits_Occult.QuestNode_GiveRewardsBarker">
					<faction>$faction</faction>
					<customLetterLabel TKey="LetterLabelPaymentArrived">E-branch relations improved</customLetterLabel>
					<customLetterText TKey="LetterTextPaymentArrived">By agreeing to safeguard a dangerous object, the Occult Branch's respect for you has increased.</customLetterText>
					<possibleQuests>
					  <li>HVMP_BarkerCorpse</li>
					  <li>HVMP_BarkerCube</li>
					  <li>HVMP_BarkerNucleus</li>
					  <li>HVMP_BarkerSphere</li>
					  <!--<li>HVMP_BarkerSpine</li> this is just a free shard since you can kill revenant spines in one shot-->
					</possibleQuests>
					<LGTH_storeAs>LGTH_on</LGTH_storeAs>
					<LGTH_description>\nThe object is already agitated, and may activate soon.</LGTH_description>
					<RR_provocationDelayHoursRange>1</RR_provocationDelayHoursRange>
					<RR_description>\nThe Void is possessive of these trinkets; by accepting this quest, you will provoke it. A random anomalous incident will occur shortly thereafter.</RR_description>
					<TT_bonusItems>1</TT_bonusItems>
					<nonTT_description>one</nonTT_description>
					<TT_description>not one, but two such objects</TT_description>
				  </li>
				  <li Class="QuestNode_End">
					<outcome>Success</outcome>
					<!--<sendStandardLetter>$sendStandardLetter</sendStandardLetter>-->
				  </li>
			  </nodes>
			</node>
		</li>
      </nodes>
    </root>
  </QuestScriptDef>
  
  <QuestScriptDef Name="HVMP_BarkerBase" Abstract="True">
    <expireDaysRange>2</expireDaysRange>
    <rootSelectionWeight>0</rootSelectionWeight>
    <isRootSpecial>true</isRootSpecial>
	<autoAccept>true</autoAccept>
	<hideOnCleanup>true</hideOnCleanup>
	<defaultHidden>true</defaultHidden>
    <questNameRules>
      <rulesStrings>
        <li>questName->Anomalous object</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->The Occult Branch will deliver an anomalous object by transport pod.</li>
      </rulesStrings>
    </questDescriptionRules>
  </QuestScriptDef>
  
  <QuestScriptDef ParentName="MysteriousCargoBase">
    <defName>HVMP_BarkerCorpse</defName>
    <root Class="HautsPermits_Occult.QuestNode_Root_BarkerCorpse" />
    <questContentRules>
      <rulesStrings>
        <li>deliveredLetterLabel->Anomalous object</li>
        <li>deliveredLetterText(pawnOnMap==true)->The object appears to be a human corpse.\n\nOn further inspection, the corpse looks identical to [pawn_nameDef]. Its skin feels waxy and warm to the touch. [pawn_nameDef] is deeply unsettled by its presence.\n\nStudy the corpse to learn more about it.</li>
        <li>deliveredLetterText(pawnOnMap==false)->The object appears to be a human corpse.\n\nOn further inspection, the corpse looks identical to [pawn_nameDef]. Its skin feels waxy and warm to the touch. [pawn_nameDef] will be deeply unsettled by its presence.\n\nStudy the corpse to learn more about it.</li>
      </rulesStrings>
    </questContentRules>
  </QuestScriptDef>
  
  <QuestScriptDef ParentName="MysteriousCargoBase">
    <defName>HVMP_BarkerCube</defName>
    <root Class="HautsPermits_Occult.QuestNode_Root_BarkerCube">
	  <LGTH_bonusInterests>1~5</LGTH_bonusInterests>
	</root>
    <questContentRules>
      <rulesStrings>
        <li>deliveredLetterLabel->Anomalous object</li>
        <li>deliveredLetterText(pawnOnMap==true)->The object is a simple cube that shines like gold but is impossible to scratch. It is light and warm to the touch. The way light plays across its surface is captivating.\n\n[pawn_nameDef] feels inexplicably drawn to the cube.</li>
        <li>deliveredLetterText(pawnOnMap==false)->The object is a simple cube that shines like gold but is impossible to scratch. It is light and warm to the touch. The way light plays across its surface is captivating.</li>
      </rulesStrings>
    </questContentRules>
  </QuestScriptDef>
  
  <QuestScriptDef ParentName="MysteriousCargoBase">
    <defName>HVMP_BarkerNucleus</defName>
    <root Class="HautsPermits_Occult.QuestNode_Root_BarkerNucleus">
	  <hediff>HVMP_Owwwwww</hediff><!--the nucleus gains activity when damaged-->
	</root>
    <questContentRules>
      <rulesStrings>
        <li>deliveredLetterLabel->Anomalous object</li>
        <li>deliveredLetterText->The object is a lattice of fluid-smeared metal. Solid chunks of jagged metal appear here and there, packed with archotechnology. The whole structure slowly twists and bends under its own power.\n\nIt constantly grows meat on its surface, which occasionally erupts violently. If too much meat builds up, it will likely grow into something horrid.\n\nPhysical harm appears to spur the spontaneous growth of new meat, so attacking it is ill-advised.</li>
      </rulesStrings>
    </questContentRules>
  </QuestScriptDef>
  
  <QuestScriptDef ParentName="MysteriousCargoBase">
    <defName>HVMP_BarkerSphere</defName>
    <root Class="HautsPermits_Occult.QuestNode_Root_BarkerSphere" />
    <questContentRules>
      <rulesStrings>
        <li>deliveredLetterLabel->Anomalous object</li>
        <li>deliveredLetterText->The object is a large metallic sphere. It hurts to be near it.\n\nYou could attack it, though you're not sure how it might defend itself. Or, you could capture it using a holding platform and learn to make use of its power.\n\nIt seems quiet for now, but it is gaining energy over time. You can suppress the sphere when it is captured to a holding platform, reducing its energy.</li>
      </rulesStrings>
    </questContentRules>
  </QuestScriptDef>
  
  <QuestScriptDef ParentName="MysteriousCargoBase">
    <defName>HVMP_BarkerSpine</defName>
    <root Class="HautsPermits_Occult.QuestNode_Root_BarkerSpine" />
    <questContentRules>
      <rulesStrings>
        <li>deliveredLetterLabel->Anomalous object</li>
        <li>deliveredLetterText->The object resembles a thick, jagged human spine made out of a rough-cast black metal. It looks like it's covered in a dark fluid.\n\nThe spine vibrates in response to touch and twists angrily. You can study it on a holding platform to learn more.</li>
      </rulesStrings>
    </questContentRules>
  </QuestScriptDef>
  
  <!--occult: fuller-->
  <QuestScriptDef>
    <defName>HVMP_OccultFuller</defName>
	<isRootSpecial>true</isRootSpecial>
    <rootSelectionWeight>0</rootSelectionWeight>
    <rootMinPoints>350</rootMinPoints>
    <defaultChallengeRating>1</defaultChallengeRating>
    <expireDaysRange>4~8</expireDaysRange>
	<everAcceptableInSpace>true</everAcceptableInSpace>
    <questDescriptionAndNameRules>
      <rulesStrings>
        <li>lodgersLabel->cultist</li>
        <li>lodgersLabelPlural->cultists</li>
      </rulesStrings>
    </questDescriptionAndNameRules>
    <questNameRules>
      <rulesStrings>
        <li>questName->the [hostage] [cultists]</li>
        <li>questName->[guarding] [cultists]</li>
		
        <li>hostage->Hostage</li>
        <li>hostage->Captive</li>
        <li>hostage->Apprehended</li>
        <li>hostage->Restrained</li>
        <li>hostage->Bound</li>
        <li>hostage->Fettered</li>
        <li>hostage->Void</li>
		
        <li>cultists(p=3)->Cultists</li>
        <li>cultists->Ritualists</li>
        <li>cultists->Invokers</li>
        <li>cultists->Zealots</li>
        <li>cultists->Madfolk</li>
		
        <li>guarding->Guarding</li>
        <li>guarding->Wardening</li>
        <li>guarding->Imprisoning</li>
        <li>guarding->Housing</li>
        <li>guarding->Restraining</li>
		
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <include>
        <li>QuestHospitalityCommon</li>
      </include>
      <rulesStrings>
        <!-- Asker is faction leader, single prisoner -->
        <li>questDescription(asker_factionLeader==True,lodgersCount==1)->[asker_nameFull], [asker_faction_leaderTitle] of the [asker_faction_name], wants you to hold prisoner a cultist for [asker_objective]. The prisoner, a [lodgers0_age]-year-old cultist named [lodgers0_nameFull], [cultistKnows], which makes [lodgers0_objective] to the [asker_faction_name]. You only need to keep the cultist for [shuttleDelayTicks_duration] until [asker_possessive] interrogation facilities are ready.[threatsInfo3]\n[mutatorSuffix]</li>
        <li>threatsInfo3(generateThreats==true)->\n\nUnfortunately, [lodgersFaction_name] has contracted mercenary forces to rescue [lodgers0_nameDef]. [pawnKindsParagraph]</li>
		 <li>threatsInfo3(generateThreats==false)-></li>

        <!-- Asker is faction leader, multiple prisoners -->
        <li>questDescription(asker_factionLeader==True,lodgersCount>=2)->[asker_nameFull], [asker_faction_leaderTitle] of the [asker_faction_name], wants you to hold prisoner [lodgersCount] cultists for [shuttleDelayTicks_duration], until [asker_possessive] interrogation facilities are ready.</li>
		
		<li>cultistKnows->knows the location of potent archotech infrastructure</li>
		<li>cultistKnows->has knowledge of various cult hideouts around the planet</li>
		<li>cultistKnows->is the only survivor with the knowledge needed to stop an upcoming Void ritual</li>
		<li>cultistKnows->may be the last holder of a particular psychic engram</li>
		
		<li>mutatorSuffix->[mutator_FWK_info][mutator_SRM_info][mutator_WLW_info]</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="HautsPermits_Occult.QuestNode_Fuller">
      <storePawnKindAs>lodgersPawnKind</storePawnKindAs>
	  <pawnKinds>
		<li>Horaxian_Underthrall</li>
	  </pawnKinds>
	  <storePrisonerFactionAs>lodgersFaction</storePrisonerFactionAs>
	  <prisonerFaction>HoraxCult</prisonerFaction>
	  <nodes>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
          <parms>
            <pointsFactorTwoStar>1</pointsFactorTwoStar>
            <pointsFactorThreeStar>1</pointsFactorThreeStar>
            <selectionWeightOneStar>0.5</selectionWeightOneStar>
            <selectionWeightTwoStar>0.3</selectionWeightTwoStar>
            <selectionWeightThreeStar>0.2</selectionWeightThreeStar>
            <peacefulChallengeRating>1</peacefulChallengeRating>
            <minPointsTwoStar>250</minPointsTwoStar>
            <minPointsThreeStar>350</minPointsThreeStar>
          </parms>
        </li>
		<li Class="QuestNode_GetMap">
		  <canBeSpace>true</canBeSpace>
		</li>
		<li Class="QuestNode_Set">
          <name>lodgersArePrisoners</name>
          <value>true</value>
        </li>
        <!-- Decide random lodger conditions -->
        <li Class="QuestNode_SubScript">
          <def>Util_DecideRandomLodgerConditions</def>
          <parms>
            <noConditionsWeight>1</noConditionsWeight>
            <noWorkWeight>0</noWorkWeight>
            <paralysisWeight>0</paralysisWeight>
            <bloodRotWeight>0</bloodRotWeight>
            <bloodRotAndParalysisWeight>0</bloodRotAndParalysisWeight>
            <moodThresholdWeight>0</moodThresholdWeight>
          </parms>
        </li>
		<li Class="QuestNode_Set">
		  <name>lodgersWillNotWork</name>
		  <value>true</value>
		</li>
        <li Class="QuestNode_Less">
          <value1>$challengeRating</value1>
          <value2>2</value2>
          <node Class="QuestNode_IsTrue">
            <value>$lodgersHaveNoConditions</value>
            <node Class="QuestNode_SubScript">
              <def>Hospitality_Util_DecideLodgerCountFromPoints</def>
              <parms>
                <pointsCurve>
                  <points>
                    <li>(0,  1)</li>
                    <li>(3000, 10)</li>
                    <li>(4000, 15)</li>
                  </points>
                </pointsCurve>
              </parms>
            </node>
          </node>
        </li>
		<li Class="QuestNode_IsSet">
          <name>lodgersCount</name>
          <elseNode Class="QuestNode_SubScript">
            <def>Hospitality_Util_DecideRandomLodgerCount</def>
          </elseNode>
        </li>
        <!-- Get asker's faction (if any) for proper faction name generation -->
        <li Class="QuestNode_IsNull">
          <value>$asker</value>
          <elseNode Class="QuestNode_GetFactionOf">
            <thing>$asker</thing>
            <storeAs>askerFaction</storeAs>
          </elseNode>
        </li>
        <!-- Generate lodgers -->
        <li Class="QuestNode_Set">
          <name>lodgersCountToGenerate</name>
          <value>$lodgersCount</value>
        </li>
        <li Class="QuestNode_Set"> <!-- for text use -->
          <name>lodgersCountMinusOne</name>
          <value>$($lodgersCount-1)</value>
        </li>
        <li Class="QuestNode_LoopCount">
          <loopCount>$lodgersCountToGenerate</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <kindDef>$lodgersPawnKind</kindDef>
            <faction>$lodgersFaction</faction>
            <addToList>lodgers</addToList>
            <allowAddictions>false</allowAddictions>
            <biocodeWeaponChance>1</biocodeWeaponChance>
            <biocodeApparelChance>1</biocodeApparelChance>
            <allowPregnant>false</allowPregnant>
            <isChild>false</isChild>
            <giveDependentDrugs>true</giveDependentDrugs>
          </node>
        </li>
        <!-- Lock their apparel -->
        <li Class="QuestNode_SetAllApparelLocked">
          <pawns>$lodgers</pawns>
        </li>
        <li Class="HautsPermits.QuestNode_GiveHostileEnvironmentFilm">
          <pawns>$lodgers</pawns>
        </li>
        <li Class="HautsPermits_Occult.QuestNode_GiveFullerMutators">
          <pawns>$lodgers</pawns>
		  <FWK_deathRefusalCount>1~3</FWK_deathRefusalCount>
		  <FWK_storeAs>FWK_on</FWK_storeAs>
		  <FWK_storeAsMin>FWK_min</FWK_storeAsMin>
		  <FWK_storeAsMax>FWK_max</FWK_storeAsMax>
		  <FWK_hediffDef>HVMP_FWK</FWK_hediffDef>
		  <FWK_description>\nThe cultists are clearly of a high position, given their powers of death refusal. They speak of their allies breaking through the walls of reality to reach them - and since the cult is known to harness skipgates to teleport, this may be no mere boast. Stay wary.</FWK_description>
		  <SRM_hediffDef>HVMP_SRM</SRM_hediffDef>
		  <SRM_description>\nThe cultists become aggressive when imprisoned, and a dark psychic effect of some kind prevents anesthetic or other forms of sedation from working on them.</SRM_description>
		  <WLW_hediffDef>HVMP_WLW</WLW_hediffDef>
		  <WLW_description>\nThe cultists have undergone a procedure which is causing them to gradually turn into ghouls. Twice-a-day medical treatment is required to keep the process from completing.</WLW_description>
        </li>
        <!-- Apply lodger conditions -->
        <li Class="QuestNode_SubScript">
          <def>Util_ApplyLodgerConditions</def>
        </li>
        <!-- Execute main worker script -->
        <li Class="QuestNode_SubScript">
          <def>HVMP_Hospitality_Util_Fuller</def>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
  <QuestScriptDef>
    <defName>HVMP_Hospitality_Util_Fuller</defName>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Set">
                <name>helpersChance</name>
                <value>0</value>
              </li>
              <li Class="QuestNode_Set">
                <name>shuttleDelayTicks</name>
                <value>$(roundToTicksRough(randInt(5, 25)*60000))</value> <!-- 5~25 days to shuttle -->
              </li>
            </nodes>
        </li>
        <li Class="QuestNode_ViolentQuestsAllowed">
            <node Class="QuestNode_Sequence">
				<nodes>
					<li Class="QuestNode_Set">
					  <name>generateThreats</name>
					  <value>true</value>
					</li>
					<li Class="QuestNode_GetRandomInRangeInt">
					  <storeAs>raidCount</storeAs>
					  <range>1~3</range>
					</li>
					<li Class="QuestNode_Set">
					  <name>firstRaidDelayTicks</name>
					  <value>$(roundToTicksRough(randInt(60000, 300000)))</value>
					</li>
					<li Class="QuestNode_Set">
						<name>threatPoints</name>
						<value>$($points / $raidCount)</value>
					</li>
					<li Class="QuestNode_Set">
						<name>enemyFaction</name>
						<value>$lodgersFaction</value>
					</li>
					<li Class="QuestNode_Subscript">
					  <def>Util_RaidDelayRepeatable</def>
					  <parms>
						<points>$threatPoints</points>
						<enemyFaction>$lodgersFaction</enemyFaction>
					  </parms>
					</li>
				</nodes>
            </node>
			<elseNode Class="QuestNode_Set">
                <name>generateThreats</name>
                <value>false</value>
            </elseNode>
        </li>
        <li Class="QuestNode_Set">
          <name>shuttleLeaveDelayTicks</name>
          <value>$(3*60000)</value>
        </li>
        <!-- Lodger(s) leave on cleanup -->
        <li Class="QuestNode_LeaveOnCleanup">
          <pawns>$lodgers</pawns>
          <sendStandardLetter>false</sendStandardLetter>
          <inSignalRemovePawn>lodgers.RanWild</inSignalRemovePawn>
        </li>
        <!-- Create a list of all arriving pawns -->
        <li Class="QuestNode_Unset">
          <name>arrivingPawns</name>
        </li>
        <li Class="QuestNode_AddRangeToList">
          <name>arrivingPawns</name>
          <value>$lodgers</value>
        </li>
        <!-- Lodger(s) arrive -->
        <li Class="QuestNode_Set">
           <name>lodgersAreNotPrisoners</name>
           <value>false</value>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_ArriveByDropPodsOrShuttle</def>
          <parms>
            <arrivingPawns>$arrivingPawns</arrivingPawns>
            <joiningPawns>$lodgers</joiningPawns>
            <joinPlayer>$lodgersAreNotPrisoners</joinPlayer>
            <makePrisoners>$lodgersArePrisoners</makePrisoners>
            <customLetterLabel TKey="LetterLabelLodgersArrived">[lodgersLabelSingOrPlural] arrived</customLetterLabel>
            <customLetterText TKey="LetterTextLodgersArrived">[lodgersLabelSingOrPluralDef] [lodgersHasHave] arrived. Protect [lodgersObjective] until the shuttle arrives in [shuttleDelayTicks_duration].</customLetterText>
            <arrivingPawnsLabelDef TKey="ArrivingPawnsDefiniteLabel">[lodgersLabelSingOrPluralDef]</arrivingPawnsLabelDef>
          </parms>
        </li>
        <!-- Shuttle -->
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>$shuttleDelayTicks</delayTicks>
          <lodgers>$lodgers</lodgers>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_SubScript">
                <def>Util_TransportShip_Pickup</def>
                <parms>
                  <leaveDelayTicks>$shuttleLeaveDelayTicks</leaveDelayTicks>
                  <requiredPawns>$lodgers</requiredPawns>
                  <sendAwayIfAllDespawned>$lodgers</sendAwayIfAllDespawned>
                </parms>
              </li>
              <li Class="QuestNode_SendSignals">
                <outSignals>ShuttleArrived</outSignals>
              </li>
              <li Class="QuestNode_InspectString">
                <targets>$lodgers</targets>
                <inspectString TKey="InspectStringDepartShuttle">Should depart on shuttle</inspectString>
              </li>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleArrived">Shuttle arrived</label>
                <text TKey="LetterTextShuttleArrived">The shuttle has arrived to collect [lodgersLabelSingOrPluralDef]. Be sure to have these people on the shuttle before it leaves in [shuttleLeaveDelayTicks_duration]:\n\n[lodgers]</text>
                <lookTargets>$pickupShipThing</lookTargets>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger type reward factor -->
        <li Class="QuestNode_IsAnimal">
          <value>$lodgers</value>
          <node Class="QuestNode_Sequence">
            <nodes>
              <!-- Animals -->
              <li Class="QuestNode_GetBodySize">
                <pawnKind>$lodgersPawnKind</pawnKind>
                <storeAs>lodgersBodySize</storeAs>
              </li>
              <li Class="QuestNode_Set">
                <name>lodgerRewardFactor</name>
                <value>$(0.5 + 0.1 * $lodgersBodySize)</value>
              </li>
            </nodes>
          </node>
          <elseNode Class="QuestNode_Sequence">
            <nodes>
              <!-- Humanlikes -->
              <li Class="QuestNode_Set">
                <name>lodgerRewardFactor</name>
                <value>1</value>
              </li>
            </nodes>
          </elseNode>
        </li>
        <li Class="QuestNode_Set">
          <name>lodgerRewardFromCountAndDelay</name>
          <value>$($lodgersCount * $lodgerRewardFactor * ($shuttleDelayTicks / 60000))</value>
        </li>

        <!-- Reward from remaining conditions -->
        <li Class="QuestNode_IsTrue">
          <value>$lodgersHaveNoConditions</value>
          <node Class="QuestNode_Set">
            <name>rewardValue</name>
            <value>$($rewardValue + $lodgerRewardFromCountAndDelay * 2)</value>
          </node>
        </li>
        <li Class="QuestNode_IsTrue">
          <value>$lodgersWillNotWork</value>
          <node Class="QuestNode_Set">
            <name>rewardValue</name>
            <value>$($rewardValue + $lodgerRewardFromCountAndDelay * 4)</value>
          </node>
        </li>
        <li Class="QuestNode_IsTrue">
          <value>$lodgersAreParalyzed</value>
          <node Class="QuestNode_Set">
            <name>rewardValue</name>
            <value>$($rewardValue + $lodgerRewardFromCountAndDelay * 6)</value>
          </node>
        </li>
        <li Class="QuestNode_IsTrue">
          <value>$lodgersHaveBloodRot</value>
          <node Class="QuestNode_Set">
            <name>rewardValue</name>
            <value>$($rewardValue + $lodgerRewardFromCountAndDelay * 7)</value>
          </node>
        </li>
        <li Class="QuestNode_IsTrue">
          <value>$lodgersHaveBloodRotAndParalysis</value>
          <node Class="QuestNode_Set">
            <name>rewardValue</name>
            <value>$($rewardValue + $lodgerRewardFromCountAndDelay * 9)</value>
          </node>
        </li>
        <!-- Lodger died -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestDied">Guest died: {SUBJECT_definite}</label>
                <text TKey="LetterTextGuestDied">[letterSubject], who you were charged to protect, has died. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger arrested -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.Arrested</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestCapture">Guest captured: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextGuestCapture">[letterSubject], who you were charged to protect, has been arrested. [remainingWillNowLeave][failLetterEndingQuest]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger recruited -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.Recruited</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LabelLabelPrisonerRecruited">Prisoner recruited: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LabelTextPrisonerRecruited">You have recruited {SUBJECT_definite}, who you were charged to guard. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>QuestPrisonerRecruited</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger enslaved -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.Enslaved</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LabelLabelPrisonerEnslaved">Prisoner enslaved: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LabelTextPrisonerEnslaved">You have enslaved {SUBJECT_definite}, who you were charged to guard. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>QuestPrisonerEnslaved</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Surgery violation -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.SurgeryViolation</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelUnauthorizedSurgery">Unauthorized surgery: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextUnauthorizedSurgery">Unauthorized, violating surgery has been performed on [letterSubject]. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>PerformedHarmfulSurgery</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger's xenogerm absorbed -->
        <li Class="QuestNode_Signal" MayRequire="Ludeon.RimWorld.Biotech">
          <inSignal>lodgers.XenogermAbsorbed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Xenogerm absorbed: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text>{SUBJECT_definite}, who you were charged to protect, has had {SUBJECT_possessive} xenogerm forcibly absorbed. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>XenogermAbsorbed</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger left map -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.LeftMap</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestLost">Guest lost: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextGuestLost">[letterSubject], who you were charged to protect, is gone. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger ran wild -->
        <li Class="QuestNode_Signal">
          <inSignal>lodgers.RanWild</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelLodgerRanWild">Guest lost: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextLodgerRanWild">[letterSubject], who you were charged to protect, has run wild. [remainingWillNowLeave][failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Lodger changed faction (e.g. sold to trader) -->
        <li Class="QuestNode_AnySignal">
          <inSignals>
            <li>lodgers.ChangedFaction</li>
          </inSignals>
          <node Class="QuestNode_Filter_FactionNonPlayer">
            <node Class="QuestNode_Sequence">
              <nodes>
                <li Class="QuestNode_Letter">
                  <label TKey="LetterLabelGuestJoinedOtherFaction">Guest lost: {SUBJECT_definite}</label>
                  <letterDef>NegativeEvent</letterDef>
                  <text TKey="LetterTextGuestJoinedOtherFaction">[letterSubject], who you were charged to protect, has joined another faction. [remainingWillNowLeave][failLetterEndingCommon]</text>
                </li>
                <li Class="HautsPermits.QuestNode_EndBranch">
                  <outcome>Fail</outcome>
                  <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
				  <faction>HVMP_OccultBranch</faction>
                </li>
              </nodes>
            </node>
          </node>
        </li>
        <!-- Asker faction became hostile -->
        <li Class="QuestNode_GetFactionOf">
          <thing>$asker</thing>
          <storeAs>askerFaction</storeAs>
        </li>
        <li Class="QuestNode_End">
          <inSignal>askerFaction.BecameHostileToPlayer</inSignal>
          <outcome>InvalidPreAcceptance</outcome>
          <signalListenMode>NotYetAcceptedOnly</signalListenMode>
        </li>
        <li Class="QuestNode_IsNull">
          <value>$askerFaction</value>
          <elseNode Class="QuestNode_Signal">
            <inSignal>askerFaction.BecameHostileToPlayer</inSignal>
            <node Class="QuestNode_Sequence">
              <nodes>
                <li Class="QuestNode_Letter">
                  <label TKey="LetterLabelAskerFactionHostile">Quest failed: [resolvedQuestName]</label>
                  <letterDef>NegativeEvent</letterDef>
                  <text TKey="LetterTextAskerFactionHostile">[asker_faction_name] are now hostile towards you. [failLetterEndingQuest]</text>
                </li>
                <li Class="QuestNode_End">
                  <outcome>Fail</outcome>
                </li>
              </nodes>
            </node>
          </elseNode>
        </li>
        <!-- Shuttle destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleDestroyed">Shuttle destroyed</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextShuttleDestroyed">The shuttle sent to collect [lodgersLabelSingOrPluralDef] has been destroyed. [lodgersLabelSingOrPluralDef] will now leave on foot. [failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>ShuttleDestroyed</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Shuttle sent -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentSatisfied</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <!-- Goodwill for mood will send a different quest end letter -->
              <li Class="QuestNode_Set">
                <name>sendStandardLetter</name>
                <value>true</value>
              </li>
              <!-- End quest -->
			  <li Class="HautsPermits.QuestNode_GiveRewardsBranch">
				<faction>$askerFaction</faction>
				<customLetterLabel TKey="LetterLabelPaymentArrived">Branch relations improved</customLetterLabel>
				<customLetterText TKey="LetterTextPaymentArrived">You have taken care of the refugees for the requested time. As such, the Occult Branch's respect for you has increased.</customLetterText>
			  </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
                <sendStandardLetter>$sendStandardLetter</sendStandardLetter>
              </li>
            </nodes>
          </node>
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentUnsatisfied</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestFailed">Quest failed: [resolvedQuestName]</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextQuestFailed">The shuttle sent to collect [lodgersLabelSingOrPluralDef] has departed. [lodgersLabelSingOrPluralDef] will now leave on foot. [failLetterEndingCommon]</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>MemberMissedShuttle</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
  
  <!--occult: lovecraft-->
  <QuestScriptDef>
    <defName>HVMP_OccultLovecraft</defName>
	<isRootSpecial>true</isRootSpecial>
    <rootSelectionWeight>0</rootSelectionWeight>
    <rootMinPoints>350</rootMinPoints>
    <defaultChallengeRating>1</defaultChallengeRating>
    <expireDaysRange>4~8</expireDaysRange>
	<everAcceptableInSpace>true</everAcceptableInSpace>
    <questNameRules>
      <rulesStrings>
        <li>questName->[eldritch] [storm]</li>
        <li>questName->[defusing] the [storm]</li>
        <li>questName->the [reality] [breaker]</li>
		
        <li>eldritch->Eldritch</li>
        <li>eldritch->Oncoming</li>
        <li>eldritch->Looming</li>
        <li>eldritch->Insidious</li>
        <li>eldritch->Ruinous</li>
        <li>eldritch->Psychic</li>
        <li>eldritch->Void</li>
        <li>eldritch->Empyrean</li>
        <li>eldritch->Hellish</li>
        <li>eldritch->Transcendental</li>
        <li>eldritch->Roiling</li>
        <li>eldritch->Blistering</li>
        <li>eldritch->Hissing</li>
        <li>eldritch->Chittering</li>
        <li>eldritch->Sibilant</li>
        <li>eldritch->Radiant</li>
        <li>eldritch->Foul</li>
        <li>eldritch->Warp</li>
		
        <li>defusing->Defusing</li>
        <li>defusing->Dispersing</li>
        <li>defusing->Calming</li>
        <li>defusing->Destroying</li>
        <li>defusing->Stifling</li>
        <li>defusing->Suppressing</li>
        <li>defusing->Holding Off</li>
        <li>defusing->Unmaking</li>
		
        <li>storm->Storm</li>
        <li>storm->Shadow</li>
        <li>storm->Tumult</li>
        <li>storm->Chaos</li>
        <li>storm->Discord</li>
        <li>storm->Calamity</li>
        <li>storm->Tempest</li>
        <li>storm->Devastation</li>
        <li>storm->Disaster</li>
        <li>storm->Blight</li>
		
		<li>reality->Reality</li>
		<li>reality->Sanity</li>
		<li>reality->Normalcy</li>
		<li>reality->World</li>
		<li>reality->Mundanity</li>
		<li>reality->Typicality</li>
		<li>reality->Universe</li>
		<li>reality->Plane</li>
		<li>reality->Realm</li>
		<li>reality->Orrery</li>
		<li>reality->Normality</li>
		<li>reality->Hell</li>
		<li>reality->Abyss</li>
		<li>reality->Pandaemonium</li>
		<li>reality->Tartarean</li>
		<li>reality->Hadean</li>
		<li>reality->Gehenna</li>
		
		<li>breaker->Breaker</li>
		<li>breaker->Blister</li>
		<li>breaker->Blight</li>
		<li>breaker->Warp</li>
		<li>breaker->Shredder</li>
		<li>breaker->Revulsion</li>
		<li>breaker->Shatterer</li>
		<li>breaker->Shatterpoint</li>
		<li>breaker->Wound</li>
		<li>breaker->Distortion</li>
		<li>breaker->Breach</li>
		
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->The Occult Branch has detected alarming fluctuations in the psychic field which, if left unchecked, could ravage the material universe. It will take them a long time to calm the fluctuations down, but they will be able to do so much faster if they could foist a discharge of the psychic energy onto a population of living beings.\n\nIf you are willing, they will discharge that energy to you, causing an unpredictable psychic effect. This discharge has been known to take the form of psychic drones, weather disturbances, or even stranger events[mutator_NKNS_info]\n[mutatorSuffix]</li>
		<li>mutatorSuffix->[mutator_EFT_info][mutator_TOTU_info]</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="HautsPermits_Occult.QuestNode_OccultIntermediary">
      <nodes>
		<li Class="QuestNode_GetMap">
		  <canBeSpace>true</canBeSpace>
		</li>
        <li Class="QuestNode_GetFactionOf">
          <thing>$asker</thing>
          <storeAs>faction</storeAs>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
        </li>
		<li Class="QuestNode_Delay">
			<delayTicks>$120</delayTicks>
			<node Class="QuestNode_Sequence">
			  <nodes>
				  <li Class="QuestNode_Set">
					<name>sendStandardLetter</name>
					<value>true</value>
				  </li>
				  <li Class="HautsPermits_Occult.QuestNode_GiveRewardsLovecraft">
					<faction>$faction</faction>
					<cooldownBetweenLovecrafts>60000</cooldownBetweenLovecrafts>
					<customLetterLabel TKey="LetterLabelPaymentArrived">E-branch relations improved</customLetterLabel>
					<customLetterText TKey="LetterTextPaymentArrived">By agreeing to take the brunt of a psychic discharge, the Occult Branch's respect for you has increased.</customLetterText>
					<possibleOkIncidents>
					  <li>PsychicSoothe</li>
					  <li>HVMP_LovecraftAlignment</li>
					  <li MayRequire="VanillaExpanded.VEE">VEE_PsychicBloom</li>
					</possibleOkIncidents>
					<possibleBadIncidents>
					  <li>PsychicDrone</li>
					  <li>Flashstorm</li>
					  <li>SolarFlare</li>
					  <li>DeathPall</li>
					  <li>BloodRain</li>
					  <li>UnnaturalDarkness</li>
					  <li>HVMP_LovecraftHypnoticLight</li>
					  <li>HVMP_LovecraftManhunter</li>
					  <li>HVMP_LovecraftSuppression</li>
					  <li MayRequire="vanillaracesexpanded.archon">VREA_PsychicStorm</li>
					  <li MayRequire="VanillaExpanded.VEE">VEE_PsychicRain</li>
					</possibleBadIncidents>
					<EFT_chance>0.3</EFT_chance>
					<EFT_incidents>
					  <li>DevourerAssault</li>
					  <li>HVMP_EFT_MutationWave</li>
					  <li>HVMP_EFT_Nociosphere</li>
					  <li>HVMP_EFT_SuperGhoul</li>
					</EFT_incidents>
					<EFT_description>\nThe fluctuations resonate with a subdimension of the Void in which fearsome and violent entities have been long imprisoned. Discharging the psychic energy might let some of these creatures loose.</EFT_description>
					<nonNKNS_description>, although there is also a small chance for nothing bad to happen whatsoever.</nonNKNS_description>
					<NKNS_description>; the fluctuations are tinged with purposeful malice. The discharge is sure to be destructive in nature.</NKNS_description>
					<TOTU_durationTicks>30000~300000</TOTU_durationTicks><!--0.5 to 5 days-->
					<TOTU_conditions>
					  <li>HVMP_TOTU_BloodBlight</li>
					  <li>HVMP_TOTU_EldritchViscosity</li>
					  <li>HVMP_TOTU_Mindfire</li>
					  <li>HVMP_TOTU_WeaknessOfFlesh</li>
					</TOTU_conditions>
					<TOTU_description>\nThe discharge will also have deleterious effects on living beings in the area for the next several days, although the [asker_faction_name] cannot determine what these will be in advance.</TOTU_description>
				  </li>
				  <li Class="QuestNode_End">
					<outcome>Success</outcome>
					<!--<sendStandardLetter>$sendStandardLetter</sendStandardLetter>-->
				  </li>
			  </nodes>
			</node>
		</li>
      </nodes>
    </root>
  </QuestScriptDef>
  
  <!--occult: natali-->
  <QuestScriptDef>
    <defName>HVMP_OccultNatali</defName>
	<isRootSpecial>true</isRootSpecial>
    <rootSelectionWeight>0</rootSelectionWeight>
    <rootMinPoints>350</rootMinPoints>
    <defaultChallengeRating>1</defaultChallengeRating>
    <expireDaysRange>4~8</expireDaysRange>
	<everAcceptableInSpace>true</everAcceptableInSpace>
    <questNameRules>
      <rulesStrings>
        <li>questName->the [strange] [tesseract]</li>
        <li>questName->[exploring] the [tesseract]</li>
        <li>questName->the [tesseract]</li>
		
        <li>strange->Strange</li>
        <li>strange->Eldritch</li>
        <li>strange->Folding</li>
        <li>strange->Looping</li>
        <li>strange->Pocket</li>
        <li>strange->Impossible</li>
        <li>strange->Paraspatial</li>
        <li>strange->Enclosed</li>
        <li>strange->Eldritch</li>
        <li>strange->Warped</li>
        <li>strange->Alternate</li>
        <li>strange->Mind-boggling</li>
        <li>strange->Atopographic</li>
        <li>strange->Hidden</li>
        <li>strange->Transspatial</li>
        <li>strange->Metareal</li>
		
        <li>tesseract->Tesseract</li>
        <li>tesseract->Hypervolume</li>
        <li>tesseract->Space</li>
        <li>tesseract->Labyrinth</li>
        <li>tesseract->Maze</li>
        <li>tesseract->Dimension</li>
        <li>tesseract->Plane</li>
        <li>tesseract->Otherworld</li>
        <li>tesseract->Realm</li>
        <li>tesseract->Layer</li>
        <li>tesseract->Fauld</li>
        <li>tesseract->Veil</li>
        <li>tesseract->Chamber</li>
        <li>tesseract->Vault</li>
        <li>tesseract->Donjon</li>
        <li>tesseract->Shroud</li>
		
        <li>exploring->Exploring</li>
        <li>exploring->Entering</li>
        <li>exploring->Piercing</li>
        <li>exploring->Investigating</li>
        <li>exploring->Breaching</li>
        <li>exploring->Plumbing</li>
		
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->The [asker_faction_name] has recently identified a spatial anomaly on the terrestrial surface, generated and maintained by the fiat of a mysterious archotech. They would like you to send an exploratory team into the anomaly and discover what lies inside.
\nThe [asker_faction_name] projects that the anomaly will collapse within [hypercubeTimer_duration].\n[mutatorSuffix]</li>
		<li>mutatorSuffix->[mutator_AOEAH_info][mutator_COL_info][mutator_DF_info]</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="HautsPermits_Occult.QuestNode_OccultIntermediary">
      <nodes>
        <li Class="QuestNode_Set">
          <name>siteDistRange</name>
          <value>5~13</value>
        </li>
		<li Class="QuestNode_GetMap">
		  <canBeSpace>true</canBeSpace>
		</li>
        <li Class="QuestNode_GetPlayerFaction">
          <storeAs>playerFaction</storeAs>
        </li>
        <li Class="QuestNode_GetSiteTile">
          <storeAs>tile</storeAs>
        </li>
        <li Class="HautsPermits_Occult.QuestNode_GenerateHypercube">
          <def>HVMP_Hypercube</def>
          <tile>$tile</tile>
          <faction>$faction</faction>
          <storeAs>hypercubeDoorway</storeAs>
		  <AOEAH_condition>HVMP_AOEAH</AOEAH_condition>
		  <AOEAH_description>\nCorrosive psychic radiation has been detected emanating in spurts from the anomaly. Those inside it will be exposed to the full force of the corrosion, gradually depleting their mood and wakefulness.</AOEAH_description>
		  <COL_description>\nThere's no telling what might be inside - the [asker_faction_name] notes that this anomaly is particularly unusual, even by their standards. It could be very dangerous.</COL_description>
		  <DF_description>\nThe anomaly bears the comingled signature of a subdimension in which particularly ghastly Void entities have been imprisoned. Attempting to exit from the anomaly will pull one of the prisoners out as well.</DF_description>
        </li>
        <li Class="QuestNode_SpawnWorldObjects">
          <worldObjects>$hypercubeDoorway</worldObjects>
          <tile>$tile</tile>
        </li>
        <li Class="HautsPermits.QuestNode_LookOverHere">
          <worldObjects>$hypercubeDoorway</worldObjects>
        </li>
        <li Class="QuestNode_Set">
          <name>hypercubeTimer</name>
          <value>$(randInt(12,28)*60000)</value>
        </li>
        <li Class="QuestNode_WorldObjectTimeout">
          <worldObject>$hypercubeDoorway</worldObject>
          <delayTicks>$hypercubeTimer</delayTicks>
          <isQuestTimeout>true</isQuestTimeout>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestExpired">Quest expired: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestExpired">The spatial anomaly has collapsed.</text>
              </li>
              <li Class="HautsPermits.QuestNode_EndBranch">
                <outcome>Fail</outcome>
                <goodwillChangeReason>HVMP_QuestExpired</goodwillChangeReason>
				<faction>HVMP_OccultBranch</faction>
              </li>
            </nodes>
          </node>
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>hypercubeDoorway.NataliResolved</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
			  <li Class="HautsPermits.QuestNode_GiveRewardsBranch">
				<faction>$faction</faction>
				<customLetterLabel TKey="LetterLabelPaymentArrived">E-branch relations improved</customLetterLabel>
				<customLetterText TKey="LetterTextPaymentArrived">You have successfully explored - and escaped - the spatial anomaly!</customLetterText>
			  </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
  
  <!--occult: romero-->
  <QuestScriptDef>
    <defName>HVMP_OccultRomero</defName>
	<isRootSpecial>true</isRootSpecial>
    <rootSelectionWeight>0</rootSelectionWeight>
    <rootMinPoints>350</rootMinPoints>
    <defaultChallengeRating>1</defaultChallengeRating>
    <expireDaysRange>4~8</expireDaysRange>
    <questNameRules>
      <rulesStrings>
        <li>questName->The [horrid] [swarm]</li>
        <li>questName->The [dead] [advent]</li>
        <li>questName->[swarm] of the [dead]</li>
        <li>questName->[advent] of the [dead]</li>
        <li>questName->[horrid] [advent]</li>
		
		<li>horrid->Horrid</li>
		<li>horrid->Undead</li>
		<li>horrid->Deadlife</li>
		<li>horrid->Deathly</li>
		<li>horrid->Corrupted</li>
		<li>horrid->Bloated</li>
		<li>horrid->Shambling</li>
		<li>horrid->Decaying</li>
		<li>horrid->Rotting</li>
		<li>horrid->Hadean</li>
		<li>horrid->Loathsome</li>
		<li>horrid->Carrion</li>
		<li>horrid->Foul</li>
		<li>horrid->Unnatural</li>
		<li>horrid->Ghoulish</li>
		<li>horrid->Wretched</li>
		
        <li>swarm->Swarm</li>
        <li>swarm->Horde</li>
        <li>swarm->Rabble</li>
        <li>swarm->Throng</li>
        <li>swarm->Mass</li>
        <li>swarm->Legion</li>
        <li>swarm->Tide</li>
        <li>swarm->Scourge</li>
        <li>swarm->Despoilers</li>
        <li>swarm->Ravagers</li>
        <li>swarm->Mockeries</li>
        <li>swarm->Remnants</li>
		
        <li>dead(p=4)->Dead</li>
        <li>dead->Grave</li>
        <li>dead->Crypt</li>
        <li>dead->Unliving</li>
        <li>dead->Demonic</li>
        <li>dead->Wraithly</li>
        <li>dead->Monstrous</li>
        <li>dead->Ghoulish</li>
        <li>dead->Reanimated</li>
        <li>dead->Rotting</li>
        <li>dead->Forsaken</li>
		
        <li>advent->Advent</li>
        <li>advent->Dawn</li>
        <li>advent->Rising</li>
        <li>advent->Night</li>
        <li>advent->Oncoming</li>
        <li>advent->Surge</li>
        <li>advent->Outbreak</li>
        <li>advent->Emergence</li>

      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription(raidCount==1)->[asker_nameFull], [asker_faction_leaderTitle] of the [asker_faction_name], is tracking a massive deadlife outbreak near [map_definite]. [asker_nameDef] wants you to destroy the shamblers which have arisen from it.\n\nIf you accept, the shamblers will arrive in [firstRaidDelayTicks_duration].\n[mutatorSuffix]</li>
        <li>questDescription(raidCount==2)->[asker_nameFull], [asker_faction_leaderTitle] of the [asker_faction_name], is tracking a massive deadlife outbreak near [map_definite]. [asker_nameDef] wants you to destroy the &lt;color=#00FFFF&gt;two&lt;/color&gt; hordes of shamblers which have arisen from it.\n\nIf you accept, the shamblers will arrive in [firstRaidDelayTicks_duration].\n[mutatorSuffix]</li>
		<li>mutatorSuffix->[mutator_BS_info][raid0/mutator_CAD_info][raid0/mutator_NOTED_info]</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="HautsPermits_Occult.QuestNode_OccultIntermediary">
      <nodes>
        <li Class="QuestNode_GetFactionOf">
          <thing>$asker</thing>
          <storeAs>faction</storeAs>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
        </li>
        <li Class="QuestNode_GetMap" />
        <!-- Raid(s) -->
        <li Class="QuestNode_GetRandomInRangeInt">
          <storeAs>raidCount</storeAs>
          <range>1~2</range>
        </li>
        <li Class="QuestNode_Set">
          <name>firstRaidDelayTicks</name>
          <value>$(roundToTicksRough(randInt(6000, 30000)))</value>
        </li>
        <li Class="QuestNode_Set">
          <name>BS_duration</name>
          <value>$firstRaidDelayTicks</value>
        </li>
        <li Class="HautsPermits_Occult.QuestNode_Romero_BS">
          <duration>$BS_duration</duration>
		  <durationFactor>1.4~9</durationFactor>
		  <BS_description>\nThe deadlife dust will arrive ahead of the shamblers, and it will blanket [map_definite] until some time after they arrive.</BS_description>
        </li>
		<li Class="QuestNode_Sequence">
		  <nodes>
			<li Class="HautsPermits_Occult.QuestNode_GetShamblerFaction">
			  <storeAs>enemyFaction</storeAs>
			</li>
			<li Class="QuestNode_SubScript">
			  <def>Util_RandomizePointsChallengeRating</def>
			</li>
			<li Class="QuestNode_Set">
			  <name>nextRaidDelayTicks</name>
			  <value>$firstRaidDelayTicks</value>
			</li>
			<li Class="QuestNode_Set">
			  <name>raidCountMinusOne</name>
			  <value>$raidCount</value>
			</li>
			<li Class="QuestNode_Subtract">
			  <value1>$raidCountMinusOne</value1>
			  <value2>1</value2>
			  <storeAs>raidCountMinusOne</storeAs>
			</li>
			<li Class="QuestNode_LoopCount">
			  <loopCount>$raidCount</loopCount>
			  <storeLoopCounterAs>raidLoopCounter</storeLoopCounterAs>
			  <node Class="QuestNode_Sequence">
				<nodes>
				  <!-- Try using specific delay -->
				  <li Class="QuestNode_IsNull">
					<value>$raid(($raidLoopCounter))/raidDelayTicks</value>
					<elseNode Class="QuestNode_Set">
					  <name>nextRaidDelayTicks</name>
					  <value>$raid(($raidLoopCounter))/raidDelayTicks</value>
					</elseNode>
				  </li>

				  <li Class="QuestNode_Delay">
					<delayTicks>$nextRaidDelayTicks</delayTicks>
					<node Class="QuestNode_Sequence">
					  <nodes>
						<li Class="QuestNode_SubScript">
						  <prefix>raid$raidLoopCounter</prefix>
						  <def>HVMP_ShamblerAssault</def>
						  <parms>
							<tag>lord</tag>
							<inSignal>$inSignal</inSignal>
							<map>$map</map>
							<enemyFaction>$enemyFaction</enemyFaction>
							<points>$($points * 0.5)</points>
							<walkInSpot>$walkInSpot</walkInSpot>
							<customLetterLabel>$customLetterLabel</customLetterLabel>
							<customLetterText>$customLetterText</customLetterText>
							<customLetterLabelRules>$customLetterLabelRules</customLetterLabelRules>
							<customLetterTextRules>$customLetterTextRules</customLetterTextRules>
						  </parms>
						</li>
						<li Class="QuestNode_Equal">
						  <value1>$raidLoopCounter</value1>
						  <value2>$($raidCount - 1)</value2>
						  <compareAs>int</compareAs>
						  <node Class="QuestNode_SendSignals">
							<outSignals>AllRaidsSent</outSignals>
						  </node>
						</li>
					  </nodes>
					</node>
				  </li>
				  <li Class="QuestNode_Add"> <!-- next raid comes 13000 ticks after the previous -->
					<value1>$nextRaidDelayTicks</value1>
					<value2>13000</value2>
					<storeAs>nextRaidDelayTicks</storeAs>
				  </li>
				</nodes>
			  </node>
			</li>
		  </nodes>
		</li>
        <li Class="QuestNode_AllSignals">
          <inSignals>
            <li>AllRaidsSent</li>
            <li>raid$($raidCountMinusOne)/lord.AllEnemiesDefeated</li>
          </inSignals>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Delay">
                <delayTicks>300</delayTicks>
                <node Class="QuestNode_Sequence">
                  <nodes>
					  <li Class="HautsPermits.QuestNode_GiveRewardsBranch">
						<faction>$faction</faction>
						<customLetterLabel TKey="LetterLabelPaymentArrived">E-branch relations improved</customLetterLabel>
						<customLetterText TKey="LetterTextPaymentArrived">You have defeated the shamblers! The Occult Branch's respect for you has increased.</customLetterText>
					  </li>
					<li Class="QuestNode_End">
						<outcome>Success</outcome>
						<!--<sendStandardLetter>$sendStandardLetter</sendStandardLetter>-->
					</li>
                  </nodes>
                </node>
              </li>
            </nodes>
          </node>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
  <QuestScriptDef>
    <defName>HVMP_ShamblerAssault</defName>
    <questDescriptionRules>
      <rulesStrings>
        <li>threatDescription->shamblers will attack you.</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="HautsPermits_Occult.QuestNode_Romero">
          <tag>$tag</tag>
          <customLetterLabel>$customLetterLabel</customLetterLabel>
          <customLetterText>$customLetterText</customLetterText>
          <customLetterLabelRules>$customLetterLabelRules</customLetterLabelRules>
          <customLetterTextRules>$customLetterTextRules</customLetterTextRules>
          <arrivalMode>$arrivalMode</arrivalMode>
          <canTimeoutOrFlee>$canTimeoutOrFlee</canTimeoutOrFlee>
          <raidPawnKind>$raidPawnKind</raidPawnKind>
          <inSignalLeave>EndRaid</inSignalLeave>
		  <CAD_pawnList>
		    <li>Sightstealer</li>
		    <li>Devourer</li>
		    <li>Chimera</li>
		    <li>Bulbfreak</li>
		    <li>Ghoul</li>
		  </CAD_pawnList>
		  <CAD_pointFactor>0.2</CAD_pointFactor>
		  <CAD_description>\nA variety of other unnatural entities have been spotted accompanying the shamblers.</CAD_description>
		  <NOTED_lifespanFactor>3</NOTED_lifespanFactor>
		  <NOTED_bonusHediff>HVMP_ShamblerRegen</NOTED_bonusHediff>
		  <NOTED_description>\nUnlike regular shamblers, these ones last for far longer and can even regenerate, albeit slowly.</NOTED_description>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>

  
</Defs>